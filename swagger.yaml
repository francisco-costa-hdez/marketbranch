swagger: "2.0"
info:
  description: "API de la aplicaci√≥n AchoMarket."
  version: "1.0.0"
  title: "AchoMarket"
host: "localhost:8000"
basePath: "/"
tags:
- name: "shop_user"
  description: "Operations about shop users"
- name: "client_user"
  description: "Operations about client users"
- name: "shop"
  description: "Operations about shops"
- name: "product"
  description: "Operations with products"
- name: "category"
  description: "Operations about categories and subcategories"
- name: "review"
  description: "Operations about reviews"
- name: "wishlist"
  description: "Operations about wishlists"
- name: "shopping_history"
  description: "Operations about shopping histories"
- name: "cart"
  description: "Operations about carts"
- name: "order"
  description: "Operations about orders"
schemes:
- "https"
- "http"
paths:
  /shopuser/create:
    post:
      tags:
      - "shop_user"
      summary: "Add a new shop user to the database"
      operationId: "addShopUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Shop user that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/ShopUser"
      responses:
        "405":
          description: "Invalid input"
  /shopuser/{shopuserId}:
    get:
      tags:
      - "shop_user"
      summary: "Find user by ID"
      operationId: "getShopUserById"
      produces:
      - "application/json"
      parameters:
      - name: "shopuserId"
        in: "path"
        description: "Id of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ShopUser"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
    post:
      tags:
      - "shop_user"
      summary: "Updates a shop user in the database with form data"
      operationId: "updateShopUser"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "shopuserId"
        in: "path"
        description: "Id of user that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the user"
        required: false
        type: "string"
      - name: "email"
        in: "formData"
        description: "Updated email of the user"
        required: false
        type: "string"
      - name: "profile_img"
        in: "formData"
        description: "Updated profile image of the user"
        required: false
        type: "file"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "shop_user"
      summary: "Deletes a user"
      operationId: "deleteShopUser"
      produces:
      - "application/json"
      parameters:
      - name: "shopuserId"
        in: "path"
        description: "User Id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"

  /clientuser/create:
    post:
      tags:
      - "client_user"
      summary: "Add a new client user to the database"
      operationId: "addClientUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Client user that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/ClientUser"
      responses:
        "405":
          description: "Invalid input"
  /clientuser/{clientuserId}:
    get:
      tags:
      - "client_user"
      summary: "Find user by ID"
      operationId: "getClientUserById"
      produces:
      - "application/json"
      parameters:
      - name: "clientuserId"
        in: "path"
        description: "Id of user to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ClientUser"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
    post:
      tags:
      - "client_user"
      summary: "Updates a client user in the database with form data"
      operationId: "updateClientUser"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "clientuserId"
        in: "path"
        description: "Id of user that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the user"
        required: false
        type: "string"
      - name: "email"
        in: "formData"
        description: "Updated email of the user"
        required: false
        type: "string"
      - name: "tlf"
        in: "formData"
        description: "Updated tlf of the user"
        required: false
        type: "string"
      - name: "profile_img"
        in: "formData"
        description: "Updated profile image of the user"
        required: false
        type: "file"
      - name: "address"
        in: "formData"
        description: "Updated address of the user"
        required: false
        type: "string"
      - name: "password"
        in: "formData"
        description: "Updated password of the user"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "client_user"
      summary: "Deletes a user"
      operationId: "deleteClientUser"
      produces:
      - "application/json"
      parameters:
      - name: "clientuserId"
        in: "path"
        description: "User Id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
  
  /shop/{shopuserId}/create:
    post:
      tags:
      - "shop"
      summary: "Adds a shop to the user"
      operationId: "createShop"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Client user that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/ClientUser"
      responses:
        "405":
          description: "Invalid input"
definitions:
  ShopUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      NIF:
        type: "string"
      admin_name:
        type: "string"
      email:
        type: "string"
      profile_img:
        type: "string"
        format: "binary"
      password:
        type: "string"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  ClientUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      tlf:
        type: "string"
      address:
        type: "string"
      profile_img:
        type: "string"
        format: "binary"
      password:
        type: "string"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Shop:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      address:
        type: "string"
      tlf:
        type: "string"
      email:
        type: "string"
      shopUser:
        type: "array"
        items:
          $ref: "#definitions/ShopUser"
      products:
        type: "array"
        items:
          $ref: "#definitions/Product"
      images:
        type: "array"
        items:
          $ref: "#definitions/ShopImage"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  ShopImage:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      image:
        type: "string"
        format: "binary"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      discount:
        type: "integer"
      stock:
        type: "integer"
      availability:
        type: "integer"
      subcategory:
        type: "array"
        items:
          $ref: "#definitions/Subcategory"
      trademark:
        type: "array"
        items:
          $ref: "#definitions/Trademark"
      images:
        type: "array"
        items:
          $ref: "#definitions/ProductImage"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  ProductImage:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      image:
        type: "string"
        format: "binary"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      subcategories:
        type: "array"
        items:
          $ref: "#/definitions/Subcategory"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Subcategory:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Trademark:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Review:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      rating:
        type: "integer"
      comment:
        type: "string"
      user:
        type: "array"
        items: 
          $ref: "#/definitions/ClientUser"
      product:
        type: "array"
        items: 
          $ref: "#/definitions/Product"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Wishlist:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user:
        type: "array"
        items: 
          $ref: "#/definitions/ClientUser"
      products:
        type: "array"
        items: 
          $ref: "#/definitions/Product"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  ShoppingHistory:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user:
        type: "array"
        items: 
          $ref: "#/definitions/ClientUser"
      purchases:
        type: "array"
        items: 
          $ref: "#/definitions/Purchase"
  Purchase:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      product:
        type: "array"
        items: 
          $ref: "#/definitions/Product"
      quantity:
        type: "integer"
      price:
        type: "number"
        format: "float"
      lot:
        type: "array"
        items:
          $ref: "#/definitions/Lot"
  Lot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
  Cart:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user:
        type: "array"
        items: 
          $ref: "#/definitions/ClientUser"
      products:
        type: "array"
        items:
          $ref: "#/definitions/CartProduct"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  CartProduct:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      product:
        type: "array"
        items:
          $ref: "#/definitions/Product"
      quantity:
        type: "integer"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user:
        type: "array"
        items:
          $ref: "#/definitions/ClientUser"
      products:
        type: "array"
        items:
          $ref: "#/definitions/OrderProduct"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  OrderProduct:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      product:
        type: "array"
        items:
          $ref: "#/definitions/Product"
      price:
        type: "integer"
        format: "float"
      quantity:
        type: "integer"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"